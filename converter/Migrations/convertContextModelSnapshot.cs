// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using converter.Models;

#nullable disable

namespace converter.Migrations
{
    [DbContext(typeof(convertContext))]
    partial class convertContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0-preview.4.22229.2");

            modelBuilder.Entity("converter.Models.Convert", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("content_type");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("file_name");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Id" }, "IX_convert_id")
                        .IsUnique();

                    b.ToTable("convert", (string)null);
                });

            modelBuilder.Entity("converter.Models.Result", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("VARCHAR (255)")
                        .HasColumnName("title");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Id" }, "IX_result_id")
                        .IsUnique();

                    b.ToTable("result", (string)null);
                });

            modelBuilder.Entity("converter.Models.Status", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<long>("ConvertId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("convert_id");

                    b.Property<long>("DateTime")
                        .HasColumnType("INTEGER")
                        .HasColumnName("date_time");

                    b.Property<long?>("ResultId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("result_id");

                    b.HasKey("Id");

                    b.HasIndex("ConvertId");

                    b.HasIndex("ResultId");

                    b.HasIndex(new[] { "Id" }, "IX_status_id")
                        .IsUnique();

                    b.ToTable("status", (string)null);
                });

            modelBuilder.Entity("converter.Models.Status", b =>
                {
                    b.HasOne("converter.Models.Convert", "Convert")
                        .WithMany("Statuses")
                        .HasForeignKey("ConvertId")
                        .IsRequired();

                    b.HasOne("converter.Models.Result", "Result")
                        .WithMany("Statuses")
                        .HasForeignKey("ResultId");

                    b.Navigation("Convert");

                    b.Navigation("Result");
                });

            modelBuilder.Entity("converter.Models.Convert", b =>
                {
                    b.Navigation("Statuses");
                });

            modelBuilder.Entity("converter.Models.Result", b =>
                {
                    b.Navigation("Statuses");
                });
#pragma warning restore 612, 618
        }
    }
}
